openapi: 3.0.0
info:
  title: Todo API with User Authentication
  version: 1.0.0
  description: REST API for managing todos with user authentication by vivek ranjan sahoo
paths:
  /api/auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - name
                - email
                - password
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
  /api/auth/login:
    post:
      summary: Log in user and receive JWT token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: Logged in successfully and received JWT token
        "401":
          description: Unauthorized

  /api/todos:
    get:
      summary: Get all todos by auth user
      responses:
        "200":
          description: A list of todos
      security:
        - BearerAuth: [] # Require JWT token to access
    post:
      summary: Create a todo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [pending, completed]
              required:
                - title
                - status
      responses:
        "201":
          description: Created
        "400":
          description: Bad request
      security:
        - BearerAuth: [] # Require JWT token to create todo
  /api/todos/{id}:
    get:
      summary: Get a todo by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Retrieved
        "404":
          description: Todo not found
      security:
        - BearerAuth: [] # Require JWT token to access todo by ID
    put:
      summary: Update a todo by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                status:
                  type: string
                  enum: [pending, completed]
              required:
                - title
                - status
      responses:
        "200":
          description: Updated
        "400":
          description: Bad request
        "404":
          description: Todo not found
      security:
        - BearerAuth: [] # Require JWT token to update todo by ID
    delete:
      summary: Delete a todo by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Deleted
        "404":
          description: Todo not found
      security:
        - BearerAuth: [] # Require JWT token to delete todo by ID
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
